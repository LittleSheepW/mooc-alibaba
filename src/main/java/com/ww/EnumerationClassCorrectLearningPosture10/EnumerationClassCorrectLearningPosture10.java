package com.ww.EnumerationClassCorrectLearningPosture10;

/**
 * @author: Sun
 * @create: 2019-11-20 10:07
 * @version: v1.0
 */
public class EnumerationClassCorrectLearningPosture10 {

    /**
     * 《手册》第3、4、39页中有几段关于枚举类型的描述：
     * 【参考】枚举类名带上Enum后缀，枚举成员名称需要全大写，单词间用下划线隔开。
     * 说明:枚举其实就是特殊的类，域成员均为常量，且构造方法被默认强制是私有。
     * 【推荐】如果变量值仅在一个固定范围内变化用enum类型来定义。
     * 【强制】二方库里可以定义枚举类型，参数可以使用枚举类型，但是接口返回值不允许使
     * 用枚举类型或者包含枚举类型的POJO对象。
     */

    /**
     * 本节问题：
     * 1、那么枚举类究竟是怎样的?
     * 答：①枚举一般用来表示一组相同类型的常量，比如月份、星期、颜色等。
     * ②枚举的主要使用场景是，当需要一组固定的常量，并且编译时成员就已能确定时就应该使用枚举。因此枚举类型没必要多例，如果能够保证单例，则可以减少内存开销。
     * ③枚举为数值提供了命名，更容易理解，而且枚举更加安全，功能更加强大。
     *
     * 2、默认的构造方法为何是私有的?
     * 答：目的是为了保证枚举不能被克隆，维持单例的状态。
     *
     * 3、为什么接口不要返回枚举类型。
     * 答：如果将枚举当做RPC接口的返回值或者返回值对象的属性。如果己方接口新增枚举常量，而二方(公司的其他部门)没有及时升级JAR包，
     * 会出现什么情况?此时，如果己方调用此接口时传入新的枚举常量，进行序列化。反序列化时会调用到java. lang. Enum#valueOf函数，
     * 此时参数name值为新的枚举名称，最终会抛出IllegalArgumentException。
     * 因此，二方的枚举类添加新的常量后，如果使用方没有及时更新JAR包，使用Java反序列化时可能会抛出IllegalArgumentException，所以接口中不要返回枚举类型。
     *
     * 4、枚举类还有哪些高级用法?
     * ①枚举常量可以带类方法
     * ②实现状态机
     *
     * 5、Java是如何保证除了定义的枚举常量外没有其他实例呢?
     * 答：①Enum的clone方法被final修饰，保证enum常量不会被克隆。
     * ②禁止对枚举类型的反射。
     * ③序列化机制保证反序列化时枚举类型不允许构造多个相同实例。
     */
    }
